<launch>
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="x_pos" default="0.0"/>
  <arg name="y_pos" default="0.0"/>
  <arg name="z_pos" default="0.0"/>


  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find maze_solver)/worlds/maze2.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

	<!-- Environment -->

	<!-- SLAM_method -->
	<include file="$(find maze_solver)/launch/turtlebot3_slam.launch">
		<arg name="slam_methods" value="gmapping"/>
	</include>

	<!-- exploration -->
	<node pkg="explore_lite" type="explore" respawn="false" name="explore" output="screen">
		<param name="robot_base_frame" value="base_link"/>
		<param name="costmap_topic" value="map"/>
		<param name="costmap_updates_topic" value="map_updates"/>
		<param name="visualize" value="true"/>
    <!-- Rate in Hz at which new frontiers will computed and goal reconsidered -->
		<param name="planner_frequency" value="0.4"/>
    <!-- Time in seconds when robot do not make any progress for progress_timeout, current goal will be abandoned. -->
		<param name="progress_timeout" value="30.0"/>
    <!-- Used for weighting frontiers. This multiplicative parameter affects frontier potential component of the frontier weight (distance to frontier). -->
		<param name="potential_scale" value="2.0"/>
    <!-- Used for weighting frontiers. This multiplicative parameter affects frontier orientation component of the frontier weight -->
		<param name="orientation_scale" value="0.0"/>
    <!-- Used for weighting frontiers. This multiplicative parameter affects frontier gain component of the frontier weight (frontier size) -->
		<param name="gain_scale" value="1.0"/>
    <!-- Transform tolerance to use when transforming robot pose -->
		<param name="transform_tolerance" value="0.3"/>
    <!-- Minimum size of the frontier to consider the frontier as the exploration goal. Value is in meter. -->
		<param name="min_frontier_size" value="0.001"/>
	</node>
	
	<!-- move_base -->
	<include file="$(find maze_solver)/launch/move_base.launch"/>

    <!-- Launch the exit detection script -->
  <node pkg="maze_solver" type="detect_exit.py" name="exit_detector" output="screen"/>


  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

  <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />
</launch>







